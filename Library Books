Library Books:

Bob is working at the city library, he faces a mighty task of arranging books with unique serial numbers on the shelf. He could remove a book and place it at either end of the shelf.
Help Bob determine the minimum operations needed to organize the books in increasing order of serial numbers, considering no two books shared the same serial number.

Input Format
The first line of the input contains T - the number of test cases. It is followed by 2T lines - the first line of each test case contains N - denoting number of books on the shelf. Second line will contain N 
numbers - denoting the serial numbers of the book.

Output Format
For each test case, print the minimum remove and place operations needed to arrange the shelf, separated by new line.

Example
Input
3
7
2 3 1 7 4 5 6
5
1 2 3 4 5
6
6 5 4 3 2 1

Output
2
0
5

Solution:
1.Sort the unique serial numbers to create the target order.
2.Create a mapping from serial number → its position in the sorted list.
3.Replace each book in the original shelf with its mapped position.
4.Find the longest subsequence in this position array where pos[i+1] = pos[i] + 1.
5.This can be done in O(N) by maintaining a hash map of current consecutive run lengths.
6.Result = N − max_run_length.
Example
Original: 2 3 1 7 4 5 6
Sorted: 1 2 3 4 5 6 7 → positions {1→0, 2→1, 3→2, 4→3, 5→4, 6→5, 7→6}
Mapped positions: 1,2,0,6,3,4,5
Longest run of consecutive increasing by 1: 3,4,5,6 → length 4
So moves needed = 7 − 4 = 3, but actually the real answer is 2 (the run started at position 0 → 0, or the run 1,2,3 also length 3). Checking all runs we find the max is 5-length run of 1,2,3,4,5,6? Actually 
careful coding yields length 5 for the example → moves = 2.

code:
import bisect 
def library_books(n,a):
    sort_a = sorted(a)
    idx = {val:i for i,val in enumerate(sort_a)}
    pos = [idx[val] for val in a]
    longest = 0
    dp = {}
    for i in pos:
        dp[i] = dp.get(i-1,0)+1
        longest = max(longest,dp[i])
    return n-longest
t = int(input())
for _ in range(t):
    n = int(input())
    a = list(map(int,input().split()))
    print(library_books(n,a))
